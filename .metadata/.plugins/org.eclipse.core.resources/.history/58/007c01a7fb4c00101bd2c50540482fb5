/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

/* clang-format off */
/*
 * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
!!GlobalInfo
product: Pins v17.0
processor: MKL25Z128xxx4
package_id: MKL25Z128VLK4
mcu_data: ksdk2_0
processor_version: 13.0.1
board: FRDM-KL25Z
pin_labels:
- {pin_num: '13', pin_signal: ADC0_DP0/ADC0_SE0/PTE20/TPM1_CH0/UART0_TX, label: 'J10[1]', identifier: push6}
- {pin_num: '14', pin_signal: ADC0_DM0/ADC0_SE4a/PTE21/TPM1_CH1/UART0_RX, label: 'J10[3]', identifier: push5}
- {pin_num: '15', pin_signal: ADC0_DP3/ADC0_SE3/PTE22/TPM2_CH0/UART2_TX, label: 'J10[5]', identifier: push4}
- {pin_num: '16', pin_signal: ADC0_DM3/ADC0_SE7a/PTE23/TPM2_CH1/UART2_RX, label: 'J10[7]', identifier: push3}
- {pin_num: '21', pin_signal: CMP0_IN5/ADC0_SE4b/PTE29/TPM0_CH2/TPM_CLKIN0, label: 'J10[9]', identifier: push2}
- {pin_num: '22', pin_signal: DAC0_OUT/ADC0_SE23/CMP0_IN4/PTE30/TPM0_CH3/TPM_CLKIN1, label: 'J10[11]', identifier: push1}
- {pin_num: '23', pin_signal: PTE31/TPM0_CH4, label: 'J2[13]', identifier: Sensor_7}
- {pin_num: '36', pin_signal: PTA16/SPI0_MOSI/SPI0_MISO, label: 'J2[9]', identifier: Sensor_5}
- {pin_num: '37', pin_signal: PTA17/SPI0_MISO/SPI0_MOSI, label: 'J2[11]', identifier: Sensor_6}
- {pin_num: '69', pin_signal: PTC12/TPM_CLKIN0, label: 'J2[1]', identifier: Sensor_1}
- {pin_num: '70', pin_signal: PTC13/TPM_CLKIN1, label: 'J2[3]', identifier: Sensor_2}
- {pin_num: '71', pin_signal: PTC16, label: 'J2[5]', identifier: Sensor_3}
- {pin_num: '72', pin_signal: PTC17, label: 'J2[7]', identifier: Sensor_4}
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
 */
/* clang-format on */

#include "fsl_common.h"
#include "fsl_port.h"
#include "fsl_gpio.h"
#include "pin_mux.h"

/* FUNCTION ************************************************************************************************************
 *
 * Function Name : BOARD_InitBootPins
 * Description   : Calls initialization functions.
 *
 * END ****************************************************************************************************************/
void BOARD_InitBootPins(void)
{
    BOARD_InitPins();
}

/* clang-format off */
/*
 * TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
BOARD_InitPins:
- options: {callFromInitBoot: 'true', coreID: core0, enableClock: 'true'}
- pin_list:
  - {pin_num: '28', peripheral: UART0, signal: TX, pin_signal: TSI0_CH3/PTA2/UART0_TX/TPM2_CH1}
  - {pin_num: '27', peripheral: UART0, signal: RX, pin_signal: TSI0_CH2/PTA1/UART0_RX/TPM2_CH0}
  - {pin_num: '45', peripheral: I2C0, signal: SCL, pin_signal: ADC0_SE12/TSI0_CH7/PTB2/I2C0_SCL/TPM2_CH0}
  - {pin_num: '46', peripheral: I2C0, signal: SDA, pin_signal: ADC0_SE13/TSI0_CH8/PTB3/I2C0_SDA/TPM2_CH1}
  - {pin_num: '57', peripheral: TPM0, signal: 'CH, 1', pin_signal: ADC0_SE11/TSI0_CH15/PTC2/I2C1_SDA/TPM0_CH1}
  - {pin_num: '22', peripheral: GPIOE, signal: 'GPIO, 30', pin_signal: DAC0_OUT/ADC0_SE23/CMP0_IN4/PTE30/TPM0_CH3/TPM_CLKIN1, direction: INPUT, pull_enable: enable}
  - {pin_num: '21', peripheral: GPIOE, signal: 'GPIO, 29', pin_signal: CMP0_IN5/ADC0_SE4b/PTE29/TPM0_CH2/TPM_CLKIN0, direction: INPUT, pull_enable: enable}
  - {pin_num: '16', peripheral: GPIOE, signal: 'GPIO, 23', pin_signal: ADC0_DM3/ADC0_SE7a/PTE23/TPM2_CH1/UART2_RX, direction: INPUT, pull_enable: enable}
  - {pin_num: '15', peripheral: GPIOE, signal: 'GPIO, 22', pin_signal: ADC0_DP3/ADC0_SE3/PTE22/TPM2_CH0/UART2_TX, direction: INPUT, pull_enable: enable}
  - {pin_num: '14', peripheral: GPIOE, signal: 'GPIO, 21', pin_signal: ADC0_DM0/ADC0_SE4a/PTE21/TPM1_CH1/UART0_RX, direction: INPUT, pull_enable: enable}
  - {pin_num: '13', peripheral: GPIOE, signal: 'GPIO, 20', pin_signal: ADC0_DP0/ADC0_SE0/PTE20/TPM1_CH0/UART0_TX, direction: INPUT, pull_enable: enable}
  - {pin_num: '56', peripheral: TPM0, signal: 'CH, 0', pin_signal: ADC0_SE15/TSI0_CH14/PTC1/LLWU_P6/RTC_CLKIN/I2C1_SCL/TPM0_CH0}
  - {pin_num: '69', peripheral: GPIOC, signal: 'GPIO, 12', pin_signal: PTC12/TPM_CLKIN0, direction: INPUT}
  - {pin_num: '70', peripheral: GPIOC, signal: 'GPIO, 13', pin_signal: PTC13/TPM_CLKIN1, direction: INPUT}
  - {pin_num: '71', peripheral: GPIOC, signal: 'GPIO, 16', pin_signal: PTC16, direction: INPUT}
  - {pin_num: '72', peripheral: GPIOC, signal: 'GPIO, 17', pin_signal: PTC17, direction: INPUT}
  - {pin_num: '36', peripheral: GPIOA, signal: 'GPIO, 16', pin_signal: PTA16/SPI0_MOSI/SPI0_MISO, direction: INPUT}
  - {pin_num: '37', peripheral: GPIOA, signal: 'GPIO, 17', pin_signal: PTA17/SPI0_MISO/SPI0_MOSI, direction: INPUT}
  - {pin_num: '23', peripheral: GPIOE, signal: 'GPIO, 31', pin_signal: PTE31/TPM0_CH4, direction: INPUT}
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS ***********
 */
/* clang-format on */

/* FUNCTION ************************************************************************************************************
 *
 * Function Name : BOARD_InitPins
 * Description   : Configures pin routing and optionally pin electrical features.
 *
 * END ****************************************************************************************************************/
void BOARD_InitPins(void)
{
    /* Port A Clock Gate Control: Clock enabled */
    CLOCK_EnableClock(kCLOCK_PortA);
    /* Port B Clock Gate Control: Clock enabled */
    CLOCK_EnableClock(kCLOCK_PortB);
    /* Port C Clock Gate Control: Clock enabled */
    CLOCK_EnableClock(kCLOCK_PortC);
    /* Port E Clock Gate Control: Clock enabled */
    CLOCK_EnableClock(kCLOCK_PortE);

    gpio_pin_config_t Sensor_5_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTA16 (pin 36)  */
    GPIO_PinInit(BOARD_INITPINS_Sensor_5_GPIO, BOARD_INITPINS_Sensor_5_PIN, &Sensor_5_config);

    gpio_pin_config_t Sensor_6_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTA17 (pin 37)  */
    GPIO_PinInit(BOARD_INITPINS_Sensor_6_GPIO, BOARD_INITPINS_Sensor_6_PIN, &Sensor_6_config);

    gpio_pin_config_t Sensor_1_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTC12 (pin 69)  */
    GPIO_PinInit(BOARD_INITPINS_Sensor_1_GPIO, BOARD_INITPINS_Sensor_1_PIN, &Sensor_1_config);

    gpio_pin_config_t Sensor_2_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTC13 (pin 70)  */
    GPIO_PinInit(BOARD_INITPINS_Sensor_2_GPIO, BOARD_INITPINS_Sensor_2_PIN, &Sensor_2_config);

    gpio_pin_config_t Sensor_3_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTC16 (pin 71)  */
    GPIO_PinInit(BOARD_INITPINS_Sensor_3_GPIO, BOARD_INITPINS_Sensor_3_PIN, &Sensor_3_config);

    gpio_pin_config_t Sensor_4_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTC17 (pin 72)  */
    GPIO_PinInit(BOARD_INITPINS_Sensor_4_GPIO, BOARD_INITPINS_Sensor_4_PIN, &Sensor_4_config);

    gpio_pin_config_t push6_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTE20 (pin 13)  */
    GPIO_PinInit(BOARD_INITPINS_push6_GPIO, BOARD_INITPINS_push6_PIN, &push6_config);

    gpio_pin_config_t push5_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTE21 (pin 14)  */
    GPIO_PinInit(BOARD_INITPINS_push5_GPIO, BOARD_INITPINS_push5_PIN, &push5_config);

    gpio_pin_config_t push4_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTE22 (pin 15)  */
    GPIO_PinInit(BOARD_INITPINS_push4_GPIO, BOARD_INITPINS_push4_PIN, &push4_config);

    gpio_pin_config_t push3_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTE23 (pin 16)  */
    GPIO_PinInit(BOARD_INITPINS_push3_GPIO, BOARD_INITPINS_push3_PIN, &push3_config);

    gpio_pin_config_t push2_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTE29 (pin 21)  */
    GPIO_PinInit(BOARD_INITPINS_push2_GPIO, BOARD_INITPINS_push2_PIN, &push2_config);

    gpio_pin_config_t push1_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTE30 (pin 22)  */
    GPIO_PinInit(BOARD_INITPINS_push1_GPIO, BOARD_INITPINS_push1_PIN, &push1_config);

    gpio_pin_config_t Sensor_7_config = {
        .pinDirection = kGPIO_DigitalInput,
        .outputLogic = 0U
    };
    /* Initialize GPIO functionality on pin PTE31 (pin 23)  */
    GPIO_PinInit(BOARD_INITPINS_Sensor_7_GPIO, BOARD_INITPINS_Sensor_7_PIN, &Sensor_7_config);

    /* PORTA1 (pin 27) is configured as UART0_RX */
    PORT_SetPinMux(BOARD_INITPINS_DEBUG_UART_RX_PORT, BOARD_INITPINS_DEBUG_UART_RX_PIN, kPORT_MuxAlt2);

    /* PORTA16 (pin 36) is configured as PTA16 */
    PORT_SetPinMux(BOARD_INITPINS_Sensor_5_PORT, BOARD_INITPINS_Sensor_5_PIN, kPORT_MuxAsGpio);

    /* PORTA17 (pin 37) is configured as PTA17 */
    PORT_SetPinMux(BOARD_INITPINS_Sensor_6_PORT, BOARD_INITPINS_Sensor_6_PIN, kPORT_MuxAsGpio);

    /* PORTA2 (pin 28) is configured as UART0_TX */
    PORT_SetPinMux(BOARD_INITPINS_DEBUG_UART_TX_PORT, BOARD_INITPINS_DEBUG_UART_TX_PIN, kPORT_MuxAlt2);

    /* PORTB2 (pin 45) is configured as I2C0_SCL */
    PORT_SetPinMux(PORTB, 2U, kPORT_MuxAlt2);

    /* PORTB3 (pin 46) is configured as I2C0_SDA */
    PORT_SetPinMux(PORTB, 3U, kPORT_MuxAlt2);

    /* PORTC1 (pin 56) is configured as TPM0_CH0 */
    PORT_SetPinMux(PORTC, 1U, kPORT_MuxAlt4);

    /* PORTC12 (pin 69) is configured as PTC12 */
    PORT_SetPinMux(BOARD_INITPINS_Sensor_1_PORT, BOARD_INITPINS_Sensor_1_PIN, kPORT_MuxAsGpio);

    /* PORTC13 (pin 70) is configured as PTC13 */
    PORT_SetPinMux(BOARD_INITPINS_Sensor_2_PORT, BOARD_INITPINS_Sensor_2_PIN, kPORT_MuxAsGpio);

    /* PORTC16 (pin 71) is configured as PTC16 */
    PORT_SetPinMux(BOARD_INITPINS_Sensor_3_PORT, BOARD_INITPINS_Sensor_3_PIN, kPORT_MuxAsGpio);

    /* PORTC17 (pin 72) is configured as PTC17 */
    PORT_SetPinMux(BOARD_INITPINS_Sensor_4_PORT, BOARD_INITPINS_Sensor_4_PIN, kPORT_MuxAsGpio);

    /* PORTC2 (pin 57) is configured as TPM0_CH1 */
    PORT_SetPinMux(PORTC, 2U, kPORT_MuxAlt4);

    const port_pin_config_t push6 = {/* Internal pull-up resistor is enabled */
                                     kPORT_PullUp,
                                     /* Slow slew rate is configured */
                                     kPORT_SlowSlewRate,
                                     /* Passive filter is disabled */
                                     kPORT_PassiveFilterDisable,
                                     /* Low drive strength is configured */
                                     kPORT_LowDriveStrength,
                                     /* Pin is configured as PTE20 */
                                     kPORT_MuxAsGpio};
    /* PORTE20 (pin 13) is configured as PTE20 */
    PORT_SetPinConfig(BOARD_INITPINS_push6_PORT, BOARD_INITPINS_push6_PIN, &push6);

    const port_pin_config_t push5 = {/* Internal pull-up resistor is enabled */
                                     kPORT_PullUp,
                                     /* Slow slew rate is configured */
                                     kPORT_SlowSlewRate,
                                     /* Passive filter is disabled */
                                     kPORT_PassiveFilterDisable,
                                     /* Low drive strength is configured */
                                     kPORT_LowDriveStrength,
                                     /* Pin is configured as PTE21 */
                                     kPORT_MuxAsGpio};
    /* PORTE21 (pin 14) is configured as PTE21 */
    PORT_SetPinConfig(BOARD_INITPINS_push5_PORT, BOARD_INITPINS_push5_PIN, &push5);

    const port_pin_config_t push4 = {/* Internal pull-up resistor is enabled */
                                     kPORT_PullUp,
                                     /* Slow slew rate is configured */
                                     kPORT_SlowSlewRate,
                                     /* Passive filter is disabled */
                                     kPORT_PassiveFilterDisable,
                                     /* Low drive strength is configured */
                                     kPORT_LowDriveStrength,
                                     /* Pin is configured as PTE22 */
                                     kPORT_MuxAsGpio};
    /* PORTE22 (pin 15) is configured as PTE22 */
    PORT_SetPinConfig(BOARD_INITPINS_push4_PORT, BOARD_INITPINS_push4_PIN, &push4);

    const port_pin_config_t push3 = {/* Internal pull-up resistor is enabled */
                                     kPORT_PullUp,
                                     /* Slow slew rate is configured */
                                     kPORT_SlowSlewRate,
                                     /* Passive filter is disabled */
                                     kPORT_PassiveFilterDisable,
                                     /* Low drive strength is configured */
                                     kPORT_LowDriveStrength,
                                     /* Pin is configured as PTE23 */
                                     kPORT_MuxAsGpio};
    /* PORTE23 (pin 16) is configured as PTE23 */
    PORT_SetPinConfig(BOARD_INITPINS_push3_PORT, BOARD_INITPINS_push3_PIN, &push3);

    const port_pin_config_t push2 = {/* Internal pull-up resistor is enabled */
                                     kPORT_PullUp,
                                     /* Slow slew rate is configured */
                                     kPORT_SlowSlewRate,
                                     /* Passive filter is disabled */
                                     kPORT_PassiveFilterDisable,
                                     /* Low drive strength is configured */
                                     kPORT_LowDriveStrength,
                                     /* Pin is configured as PTE29 */
                                     kPORT_MuxAsGpio};
    /* PORTE29 (pin 21) is configured as PTE29 */
    PORT_SetPinConfig(BOARD_INITPINS_push2_PORT, BOARD_INITPINS_push2_PIN, &push2);

    const port_pin_config_t push1 = {/* Internal pull-up resistor is enabled */
                                     kPORT_PullUp,
                                     /* Slow slew rate is configured */
                                     kPORT_SlowSlewRate,
                                     /* Passive filter is disabled */
                                     kPORT_PassiveFilterDisable,
                                     /* Low drive strength is configured */
                                     kPORT_LowDriveStrength,
                                     /* Pin is configured as PTE30 */
                                     kPORT_MuxAsGpio};
    /* PORTE30 (pin 22) is configured as PTE30 */
    PORT_SetPinConfig(BOARD_INITPINS_push1_PORT, BOARD_INITPINS_push1_PIN, &push1);

    /* PORTE31 (pin 23) is configured as PTE31 */
    PORT_SetPinMux(BOARD_INITPINS_Sensor_7_PORT, BOARD_INITPINS_Sensor_7_PIN, kPORT_MuxAsGpio);

    SIM->SOPT5 = ((SIM->SOPT5 &
                   /* Mask bits to zero which are setting */
                   (~(SIM_SOPT5_UART0TXSRC_MASK | SIM_SOPT5_UART0RXSRC_MASK)))

                  /* UART0 transmit data source select: UART0_TX pin. */
                  | SIM_SOPT5_UART0TXSRC(SOPT5_UART0TXSRC_UART_TX)

                  /* UART0 receive data source select: UART0_RX pin. */
                  | SIM_SOPT5_UART0RXSRC(SOPT5_UART0RXSRC_UART_RX));
}
/***********************************************************************************************************************
 * EOF
 **********************************************************************************************************************/
